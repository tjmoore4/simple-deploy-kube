---
- name: Install jmespath
  shell: pip3 install jmespath --user

- name: Install etcd
  shell: curl -s https://docs.storageos.com/sh/deploy-etcd.sh | bash

- name: Wait for the etcd Operator
  shell: kubectl get pods -n storageos-etcd -o json
  register: kubectl_get_etcd_pods
  until: kubectl_get_etcd_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  retries: 5
  delay: 20

- name: Install StorageOS Operator
  shell: kubectl create -f https://github.com/storageos/cluster-operator/releases/download/v2.2.0/storageos-operator.yaml

- name: Wait for the StorageOS Operator
  shell: kubectl get pods -n storageos-operator -o json
  register: kubectl_get_soo_pods
  until: kubectl_get_soo_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  retries: 5
  delay: 20

- name: Create StorageOS Secret
  shell:
    cmd: | 
      kubectl create -f - <<END
      apiVersion: v1
      kind: Secret
      metadata:
        name: "storageos-api"
        namespace: "storageos-operator"
        labels:
          app: "storageos"
      type: "kubernetes.io/storageos"
      data:
        # echo -n '<secret>' | base64
        apiUsername: c3RvcmFnZW9z
        apiPassword: c3RvcmFnZW9z
        # CSI Credentials
        csiProvisionUsername: c3RvcmFnZW9z
        csiProvisionPassword: c3RvcmFnZW9z
        csiControllerPublishUsername: c3RvcmFnZW9z
        csiControllerPublishPassword: c3RvcmFnZW9z
        csiNodePublishUsername: c3RvcmFnZW9z
        csiNodePublishPassword: c3RvcmFnZW9z
        csiControllerExpandUsername: c3RvcmFnZW9z
        csiControllerExpandPassword: c3RvcmFnZW9z
      END

- name: Create StorageOS Cluster
  shell:
    cmd: |
      kubectl create -f - <<END
      apiVersion: "storageos.com/v1"
      kind: StorageOSCluster
      metadata:
        name: "example-storageos"
        namespace: "storageos-operator"
      spec:
        # StorageOS Pods are in kube-system by default
        secretRefName: "storageos-api" # Reference from the Secret created in the previous step
        secretRefNamespace: "storageos-operator"  # Namespace of the Secret
        k8sDistro: "upstream"
        images:
          nodeContainer: "storageos/node:v2.2.0" # StorageOS version
          kubeSchedulerContainer: "k8s.gcr.io/kube-scheduler:{{ schedulerversion }}"
        kvBackend:
          address: 'storageos-etcd-client.storageos-etcd:2379' # Example address, change for your etcd endpoint
        # address: '10.42.15.23:2379,10.42.12.22:2379,10.42.13.16:2379' # You can set ETCD server ips
        resources:
          requests:
            memory: "512Mi"
            cpu: 1
      END

- name: Wait for the StorageOS Cluster
  shell: kubectl get pods -n kube-system -o json
  register: kubectl_get_soc_pods
  until: kubectl_get_soc_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
  retries: 10
  delay: 30
